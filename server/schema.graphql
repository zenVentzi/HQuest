type Book {
  title: String!
  author: String!
}

type User {
  id: ID!
  email: String!
  fullName: String!
  avatarSrc: String!
  me: Boolean!
}

enum QuestionType {
  Scale
  Text
}

type Question {
  id: ID!
  type: QuestionType!
  possibleValues: [String!]
  value: String!
  answer: Answer
}

type Questions {
  answered: [Question!]!
  unanswered: [Question!]!
}

type Answer {
  id: ID!
  userId: ID!
  questionId: ID!
  value: String!
}

type Query {
  books: [Book!]!
  book(title: String): Book
  users(match: String): [User!]!
  user(id: ID!): User
  questions(userId: ID!, all: Boolean!): Questions
}

type Mutation {
  addBook(title: String!, author: String!): Book!
  signUp(firstName: String!, surName: String!, email: String!, password: String!): String
  login(email: String!, password: String!): String
  editAnswer(answerId: ID!, answerValue: String!): Answer!
  addAnswer(questionId: ID!, answerValue: String!): Answer!
  removeAnswer(answerId: ID!): Answer!
  removeQuestion(questionId: ID!): Question!
  uploadAvatar(base64Img: String!): String!
  seedDb: String
}

type Subscription {
  bookAdded: Book!
}